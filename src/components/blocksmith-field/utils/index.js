// todo: address circular dependency lint warning

import { handleDragEnd as handleDragEndFn, handleDragStart as handleDragStartFn } from '@triniti/cms/components/blocksmith-field/utils/handleDrag';
// import addEmojiFn from './addEmoji';
import areKeysSameFn from '@triniti/cms/components/blocksmith-field/utils/areKeysSame';
import attachImmutableEntitiesToEmojisFn from '@triniti/cms/components/blocksmith-field/utils/attachImmutableEntitiesToEmojis';
import blockParentNodeUtil from '@triniti/cms/components/blocksmith-field/utils/blockParentNode';
import convertToCanvasBlocksFn from '@triniti/cms/components/blocksmith-field/utils/convertToCanvasBlocks';
import convertToEditorStateFn from '@triniti/cms/components/blocksmith-field/utils/convertToEditorState';
// import copySelectedBlocksToClipboardFn from './copySelectedBlocksToClipboard';
// import createLinkAtSelectionFn from './createLinkAtSelection';
// import deleteBlockFn from './deleteBlock';
// import deleteSelectedBlocksFn from './deleteSelectedBlocks';
// import dropBlockFn from './dropBlock';
// import findBlockFn from './findBlock';
import getBlockForKeyFn from '@triniti/cms/components/blocksmith-field/utils/getBlockForKey';
// import getBlockNodeFn from './getBlockNode';
import getDraggedBlockNodeFn from '@triniti/cms/components/blocksmith-field/utils/getDraggedBlockNode';
import getInsertBlockMarkerNodeFn from '@triniti/cms/components/blocksmith-field/utils/getInsertBlockMarkerNode';
// import getListBlockNodesFn from './getListBlockNodes';
// import getListBlocksFn from './getListBlocks';
// import getValidBlockTargetFn from './getValidBlockTarget';
// import getWordCountFn from './getWordCount';
import handleDocumentDragoverFn from '@triniti/cms/components/blocksmith-field/utils/handleDocumentDragover';
import handleDocumentDropFn from '@triniti/cms/components/blocksmith-field/utils/handleDocumentDrop';
import hasEntityFn from '@triniti/cms/components/blocksmith-field/utils/hasEntity';
// import insertCanvasBlocksFn from './insertCanvasBlocks';
// import insertEmptyBlockFn from './insertEmptyBlock';
// import isAtomicBlockSelectedFn from './isAtomicBlockSelected';
import isBlockAListFn from '@triniti/cms/components/blocksmith-field/utils/isBlockAList';
import isBlockEmptyFn from '@triniti/cms/components/blocksmith-field/utils/isBlockEmpty';
// import isFirstListBlockFn from './isFirstListBlock';
// import isLastListBlockFn from './isLastListBlock';
// import loadFacebookSDKFn from './loadFacebookSDK';
// import loadTwitterSDKFn from './loadTwitterSDK';
import normalizeKeyFn from '@triniti/cms/components/blocksmith-field/utils/normalizeKey';
import preventDefaultFn from '@triniti/cms/components/blocksmith-field/utils/preventDefault';
// import pushEditorStateFn from './pushEditorState';
// import removeLinkAtSelectionFn from './removeLinkAtSelection';
// import replaceBlockAtKeyFn from './replaceBlockAtKey';
// import selectBlockFn, { selectionTypes } from './selectBlock';
// import selectionUtil from './selection';
// import shiftBlockFn from './shiftBlock';
// import sidebarUtil from './sidebar';
import styleBlockTargetNodeStatusFn from '@triniti/cms/components/blocksmith-field/utils/styleBlockTargetNodeStatus';
import styleDragTargetFn from '@triniti/cms/components/blocksmith-field/utils/styleDragTarget';
// import updateBlocksFn from './updateBlocks';
// import validateBlocksFn from './validateBlocks';

// export const addEmoji = addEmojiFn;
export const areKeysSame = areKeysSameFn;
export const attachImmutableEntitiesToEmojis = attachImmutableEntitiesToEmojisFn;
export const blockParentNode = blockParentNodeUtil;
export const convertToCanvasBlocks = convertToCanvasBlocksFn;
export const convertToEditorState = convertToEditorStateFn;
// export const copySelectedBlocksToClipboard = copySelectedBlocksToClipboardFn;
// export const createLinkAtSelection = createLinkAtSelectionFn;
// export const deleteBlock = deleteBlockFn;
// export const deleteSelectedBlocks = deleteSelectedBlocksFn;
// export const dropBlock = dropBlockFn;
// export const findBlock = findBlockFn;
export const getBlockForKey = getBlockForKeyFn;
// export const getBlockNode = getBlockNodeFn;
export const getDraggedBlockNode = getDraggedBlockNodeFn;
export const getInsertBlockMarkerNode = getInsertBlockMarkerNodeFn;
// export const getListBlockNodes = getListBlockNodesFn;
// export const getListBlocks = getListBlocksFn;
// export const getValidBlockTarget = getValidBlockTargetFn;
// export const getWordCount = getWordCountFn;
export const handleDocumentDragover = handleDocumentDragoverFn;
export const handleDocumentDrop = handleDocumentDropFn;
export const handleDragEnd = handleDragEndFn;
export const handleDragStart = handleDragStartFn;
export const hasEntity = hasEntityFn;
// export const insertCanvasBlocks = insertCanvasBlocksFn;
// export const insertEmptyBlock = insertEmptyBlockFn;
// export const isAtomicBlockSelected = isAtomicBlockSelectedFn;
export const isBlockAList = isBlockAListFn;
export const isBlockEmpty = isBlockEmptyFn;
// export const isFirstListBlock = isFirstListBlockFn;
// export const isLastListBlock = isLastListBlockFn;
// export const loadFacebookSDK = loadFacebookSDKFn;
// export const loadTwitterSDK = loadTwitterSDKFn;
export const normalizeKey = normalizeKeyFn;
export const preventDefault = preventDefaultFn;
// export const pushEditorState = pushEditorStateFn;
// export const removeLinkAtSelection = removeLinkAtSelectionFn;
// export const replaceBlockAtKey = replaceBlockAtKeyFn;
// export const selectBlock = selectBlockFn;
// export const selectBlockSelectionTypes = selectionTypes;
// export const selection = selectionUtil;
// export const shiftBlock = shiftBlockFn;
// export const sidebar = sidebarUtil;
export const styleBlockTargetNodeStatus = styleBlockTargetNodeStatusFn;
export const styleDragTarget = styleDragTargetFn;
// export const updateBlocks = updateBlocksFn;
// export const validateBlocks = validateBlocksFn;
